-- MySQL Script generated by MySQL Workbench
-- 04/11/17 09:35:13
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema server-security-master
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `server-security-master` ;

-- -----------------------------------------------------
-- Schema server-security-master
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `server-security-master` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `server-security-master` ;

-- -----------------------------------------------------
-- Table `server-security-master`.`sys_menu`  菜单
-- -----------------------------------------------------
DROP TABLE IF EXISTS `server-security-master`.`sys_menu` ;

CREATE TABLE IF NOT EXISTS `server-security-master`.`sys_menu` (
  `menu_id` BIGINT NOT NULL AUTO_INCREMENT,
  `parent_id` BIGINT NULL COMMENT '父菜单ID 一级菜单为0',
  `name` VARCHAR(50) NULL COMMENT '菜单名称',
  `url` VARCHAR(200) NULL COMMENT '菜单的URL',
  `perms` VARCHAR(500) NULL COMMENT '授权（多个用逗号分隔，如：user:list, user:create）',
  `type` INT NULL COMMENT '类型    0 : 目录   1：菜单  2： 按钮',
  `icon` VARCHAR(50) NULL COMMENT '菜单图标',
  `order_num` INT NULL COMMENT '排序',
  PRIMARY KEY (`menu_id`))
ENGINE = InnoDB
COMMENT = '菜单管理';


-- -----------------------------------------------------
-- Table `server-security-master`.`sys_user`  系统用户
-- -----------------------------------------------------
DROP TABLE IF EXISTS `server-security-master`.`sys_user` ;

CREATE TABLE IF NOT EXISTS `server-security-master`.`sys_user` (
  `user_id` BIGINT NOT NULL AUTO_INCREMENT COMMENT '用户的索引号',
  `username` VARCHAR(50) NULL COMMENT '用户名',
  `password` VARCHAR(100) NULL COMMENT '密码',
  `email` VARCHAR(100) NULL COMMENT '邮箱',
  `mobile` VARCHAR(100) NULL COMMENT '手机号码',
  `status` TINYINT NULL COMMENT '状态：  0： 禁用    1： 正常',
  `create_user_id` BIGINT(20) NULL COMMENT '创建者ID',
  `create_time` DATETIME NULL COMMENT '创建时间',
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX (`username`))
ENGINE = InnoDB
COMMENT = '系统用户';


-- -----------------------------------------------------
-- Table `server-security-master`.`sys_role`   角色
-- -----------------------------------------------------
DROP TABLE IF EXISTS `server-security-master`.`sys_role` ;

CREATE TABLE IF NOT EXISTS `server-security-master`.`sys_role` (
  `role_id` BIGINT NOT NULL AUTO_INCREMENT,
  `role_name` VARCHAR(100) NULL COMMENT '角色的名称',
  `remark` VARCHAR(100) NULL COMMENT '备注',
  `create_user_id` BIGINT(20) NULL COMMENT '创建者ID',
  `create_time` DATETIME NULL COMMENT '创建时间',
  PRIMARY KEY (`role_id`))
ENGINE = InnoDB
COMMENT = '系统角色';


-- -----------------------------------------------------
-- Table `server-security-master`.`sys_user_role`  用户与角色对应关系
-- -----------------------------------------------------
DROP TABLE IF EXISTS `server-security-master`.`sys_user_role` ;

CREATE TABLE IF NOT EXISTS `server-security-master`.`sys_user_role` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `user_id` BIGINT NULL COMMENT '用户ID',
  `role_id` BIGINT NULL COMMENT '角色ID',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = '用户与角色对应关系';


-- -----------------------------------------------------
-- Table `server-security-master`.`sys_role_menu`  角色与菜单对应关系
-- -----------------------------------------------------
DROP TABLE IF EXISTS `server-security-master`.`sys_role_menu` ;

CREATE TABLE IF NOT EXISTS `server-security-master`.`sys_role_menu` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `role_id` BIGINT NULL COMMENT '角色ID',
  `menu_id` BIGINT NULL COMMENT '菜单ID',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = '角色与菜单对应关系';


-- -----------------------------------------------------
-- Table `server-security-master`.`sys_config`   系统配置信息
-- -----------------------------------------------------
DROP TABLE IF EXISTS `server-security-master`.`sys_config` ;

CREATE TABLE IF NOT EXISTS `server-security-master`.`sys_config` (
  `id` BIGINT NOT NULL,
  `key` VARCHAR(50) NULL COMMENT 'key',
  `value` VARCHAR(2000) NULL COMMENT 'value',
  `status` TINYINT NULL COMMENT '状态  0：隐藏  1：显示',
  `remark` VARCHAR(500) NULL COMMENT '备注',
  PRIMARY KEY (`id`),
  UNIQUE INDEX (`key`))
ENGINE = InnoDB
COMMENT = '系统配置信息';


-- -----------------------------------------------------
-- Table `server-security-master`.`sys_log`   系统日志
-- -----------------------------------------------------
DROP TABLE IF EXISTS `server-security-master`.`sys_log` ;

CREATE TABLE IF NOT EXISTS `server-security-master`.`sys_log` (
  `id` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(50) NULL COMMENT '用户名',
  `operation` VARCHAR(50) NULL COMMENT '用户操作',
  `method` VARCHAR(200) NULL COMMENT '请求方法',
  `params` VARCHAR(5000) NULL COMMENT '请求参数',
  `ip` VARCHAR(64) NULL COMMENT 'IP地址',
  `create_date` DATETIME NULL COMMENT '创建时间',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = '系统日志';


-- -----------------------------------------------------
-- Table `server-security-master`.`sys_oss`   上传文件
-- -----------------------------------------------------
DROP TABLE IF EXISTS `server-security-master`.`sys_oss` ;

CREATE TABLE IF NOT EXISTS `server-security-master`.`sys_oss` (
  `id` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `url` VARCHAR(200) NULL,
  `create_date` DATETIME NULL COMMENT '创建时间',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = '文件上传';


-- ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- API接口相关SQL，如果不使用server-api模块，则不用执行下面SQL -------------------------------------------------------------------------------------------------------------
-- ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------


-- -----------------------------------------------------
-- Table `server-security-master`.`tb_user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `server-security-master`.`tb_user` ;

CREATE TABLE IF NOT EXISTS `server-security-master`.`tb_user` (
  `user_id` BIGINT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(50) NULL,
  `mobile` VARCHAR(20) NULL,
  `password` VARCHAR(64) NULL,
  `create_time` DATETIME NULL,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC))
ENGINE = InnoDB
COMMENT = '用户';


-- -----------------------------------------------------
-- Table `server-security-master`.`tb_token`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `server-security-master`.`tb_token` ;

CREATE TABLE IF NOT EXISTS `server-security-master`.`tb_token` (
  `user_id` BIGINT NOT NULL,
  `token` VARCHAR(100) NULL COMMENT 'token',
  `expire_time` DATETIME NULL COMMENT '过期时间',
  `update_time` DATETIME NULL COMMENT '更新时间',
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `token_UNIQUE` (`token` ASC))
ENGINE = InnoDB
COMMENT = '用户的Token';


-- -----------------------------------------------------
-- Table `server-security-master`.`schedule_job`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `server-security-master`.`schedule_job` ;

CREATE TABLE IF NOT EXISTS `server-security-master`.`schedule_job` (
  `job_id` BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT '任务id',
  `bean_name` VARCHAR(200) NULL COMMENT 'spring bean 名称',
  `method_name` VARCHAR(100) NULL COMMENT '方法名',
  `params` VARCHAR(2000) NULL COMMENT '参数',
  `cron_expression` VARCHAR(100) NULL COMMENT 'cron表达式',
  `status` TINYINT(4) NULL COMMENT '任务状态',
  `remark` VARCHAR(255) NULL COMMENT '备注',
  `create_time` DATETIME NULL COMMENT '创建时间',
  PRIMARY KEY (`job_id`))
ENGINE = InnoDB
COMMENT = '定时任务';


-- -----------------------------------------------------
-- Table `server-security-master`.`schedule_job_log`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `server-security-master`.`schedule_job_log` ;

CREATE TABLE IF NOT EXISTS `server-security-master`.`schedule_job_log` (
  `log_id` BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT '任务日志id',
  `job_id` BIGINT(20) NULL COMMENT '任务id',
  `bean_name` VARCHAR(200) NULL COMMENT 'spring bean 名称',
  `method_name` VARCHAR(100) NULL COMMENT '方法名',
  `params` VARCHAR(2000) NULL COMMENT '参数',
  `status` TINYINT(4) NULL COMMENT '任务状态 0 ：成功　１：失败',
  `error` VARCHAR(2000) NULL COMMENT '失败信息',
  `times` INT(11) NULL COMMENT '耗时（单位：毫秒）',
  `create_time` DATETIME NULL COMMENT '创建时间',
  PRIMARY KEY (`log_id`),
  KEY `job_id` (`job_id`))
ENGINE = InnoDB
COMMENT = '定时任务日志';



--  quartz自带表结构
CREATE TABLE QRTZ_JOB_DETAILS(
SCHED_NAME VARCHAR(120) NOT NULL,
JOB_NAME VARCHAR(200) NOT NULL,
JOB_GROUP VARCHAR(200) NOT NULL,
DESCRIPTION VARCHAR(250) NULL,
JOB_CLASS_NAME VARCHAR(250) NOT NULL,
IS_DURABLE VARCHAR(1) NOT NULL,
IS_NONCONCURRENT VARCHAR(1) NOT NULL,
IS_UPDATE_DATA VARCHAR(1) NOT NULL,
REQUESTS_RECOVERY VARCHAR(1) NOT NULL,
JOB_DATA BLOB NULL,
PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP))
ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE QRTZ_TRIGGERS (
SCHED_NAME VARCHAR(120) NOT NULL,
TRIGGER_NAME VARCHAR(200) NOT NULL,
TRIGGER_GROUP VARCHAR(200) NOT NULL,
JOB_NAME VARCHAR(200) NOT NULL,
JOB_GROUP VARCHAR(200) NOT NULL,
DESCRIPTION VARCHAR(250) NULL,
NEXT_FIRE_TIME BIGINT(13) NULL,
PREV_FIRE_TIME BIGINT(13) NULL,
PRIORITY INTEGER NULL,
TRIGGER_STATE VARCHAR(16) NOT NULL,
TRIGGER_TYPE VARCHAR(8) NOT NULL,
START_TIME BIGINT(13) NOT NULL,
END_TIME BIGINT(13) NULL,
CALENDAR_NAME VARCHAR(200) NULL,
MISFIRE_INSTR SMALLINT(2) NULL,
JOB_DATA BLOB NULL,
PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP))
ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE QRTZ_SIMPLE_TRIGGERS (
SCHED_NAME VARCHAR(120) NOT NULL,
TRIGGER_NAME VARCHAR(200) NOT NULL,
TRIGGER_GROUP VARCHAR(200) NOT NULL,
REPEAT_COUNT BIGINT(7) NOT NULL,
REPEAT_INTERVAL BIGINT(12) NOT NULL,
TIMES_TRIGGERED BIGINT(10) NOT NULL,
PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP))
ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE QRTZ_CRON_TRIGGERS (
SCHED_NAME VARCHAR(120) NOT NULL,
TRIGGER_NAME VARCHAR(200) NOT NULL,
TRIGGER_GROUP VARCHAR(200) NOT NULL,
CRON_EXPRESSION VARCHAR(120) NOT NULL,
TIME_ZONE_ID VARCHAR(80),
PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP))
ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE QRTZ_SIMPROP_TRIGGERS
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 VARCHAR(1) NULL,
    BOOL_PROP_2 VARCHAR(1) NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP))
ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE QRTZ_BLOB_TRIGGERS (
SCHED_NAME VARCHAR(120) NOT NULL,
TRIGGER_NAME VARCHAR(200) NOT NULL,
TRIGGER_GROUP VARCHAR(200) NOT NULL,
BLOB_DATA BLOB NULL,
PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
INDEX (SCHED_NAME,TRIGGER_NAME, TRIGGER_GROUP),
FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP))
ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE QRTZ_CALENDARS (
SCHED_NAME VARCHAR(120) NOT NULL,
CALENDAR_NAME VARCHAR(200) NOT NULL,
CALENDAR BLOB NOT NULL,
PRIMARY KEY (SCHED_NAME,CALENDAR_NAME))
ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS (
SCHED_NAME VARCHAR(120) NOT NULL,
TRIGGER_GROUP VARCHAR(200) NOT NULL,
PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP))
ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE QRTZ_FIRED_TRIGGERS (
SCHED_NAME VARCHAR(120) NOT NULL,
ENTRY_ID VARCHAR(95) NOT NULL,
TRIGGER_NAME VARCHAR(200) NOT NULL,
TRIGGER_GROUP VARCHAR(200) NOT NULL,
INSTANCE_NAME VARCHAR(200) NOT NULL,
FIRED_TIME BIGINT(13) NOT NULL,
SCHED_TIME BIGINT(13) NOT NULL,
PRIORITY INTEGER NOT NULL,
STATE VARCHAR(16) NOT NULL,
JOB_NAME VARCHAR(200) NULL,
JOB_GROUP VARCHAR(200) NULL,
IS_NONCONCURRENT VARCHAR(1) NULL,
REQUESTS_RECOVERY VARCHAR(1) NULL,
PRIMARY KEY (SCHED_NAME,ENTRY_ID))
ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE QRTZ_SCHEDULER_STATE (
SCHED_NAME VARCHAR(120) NOT NULL,
INSTANCE_NAME VARCHAR(200) NOT NULL,
LAST_CHECKIN_TIME BIGINT(13) NOT NULL,
CHECKIN_INTERVAL BIGINT(13) NOT NULL,
PRIMARY KEY (SCHED_NAME,INSTANCE_NAME))
ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE QRTZ_LOCKS (
SCHED_NAME VARCHAR(120) NOT NULL,
LOCK_NAME VARCHAR(40) NOT NULL,
PRIMARY KEY (SCHED_NAME,LOCK_NAME))
ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE INDEX IDX_QRTZ_J_REQ_RECOVERY ON QRTZ_JOB_DETAILS(SCHED_NAME,REQUESTS_RECOVERY);
CREATE INDEX IDX_QRTZ_J_GRP ON QRTZ_JOB_DETAILS(SCHED_NAME,JOB_GROUP);

CREATE INDEX IDX_QRTZ_T_J ON QRTZ_TRIGGERS(SCHED_NAME,JOB_NAME,JOB_GROUP);
CREATE INDEX IDX_QRTZ_T_JG ON QRTZ_TRIGGERS(SCHED_NAME,JOB_GROUP);
CREATE INDEX IDX_QRTZ_T_C ON QRTZ_TRIGGERS(SCHED_NAME,CALENDAR_NAME);
CREATE INDEX IDX_QRTZ_T_G ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_GROUP);
CREATE INDEX IDX_QRTZ_T_STATE ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_STATE);
CREATE INDEX IDX_QRTZ_T_N_STATE ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
CREATE INDEX IDX_QRTZ_T_N_G_STATE ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
CREATE INDEX IDX_QRTZ_T_NEXT_FIRE_TIME ON QRTZ_TRIGGERS(SCHED_NAME,NEXT_FIRE_TIME);
CREATE INDEX IDX_QRTZ_T_NFT_ST ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
CREATE INDEX IDX_QRTZ_T_NFT_MISFIRE ON QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE ON QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE_GRP ON QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);

CREATE INDEX IDX_QRTZ_FT_TRIG_INST_NAME ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,INSTANCE_NAME);
CREATE INDEX IDX_QRTZ_FT_INST_JOB_REQ_RCVRY ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
CREATE INDEX IDX_QRTZ_FT_J_G ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,JOB_NAME,JOB_GROUP);
CREATE INDEX IDX_QRTZ_FT_JG ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,JOB_GROUP);
CREATE INDEX IDX_QRTZ_FT_T_G ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
CREATE INDEX IDX_QRTZ_FT_TG ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,TRIGGER_GROUP);

--  quartz自带表结构 结束

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `server-security-master`.`sys_menu`
-- -----------------------------------------------------
START TRANSACTION;
USE `server-security-master`;
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (1, 0, '系统管理', NULL, NULL, 0, 'fa fa-cog', 0);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (2, 1, '管理列表', 'sys/user.html', NULL, 1, 'fa fa-user', 1);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (3, 1, '角色管理', 'sys/role.html', NULL, 1, 'fa fa-user-secret', 2);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (4, 1, '菜单管理', 'sys/menu.html', NULL, 1, 'fa fa-th-list', 3);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (5, 1, 'SQL监控', 'druid/sql.html', NULL, 1, 'fa fa-bug', 4);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (6, 1, '定时任务', 'sys/schedule.html', NULL, 1, 'fa tasks', 5);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (7, 6, '查看', NULL, 'sys:schedule:list, sys:schedule:info', 2, NULL, 0);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (8, 6, '新增', '', 'sys:schedule:save', 2, NULL, 0);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (9, 6, '修改', NULL, 'sys:schedule:update', 2, NULL, 0);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (10, 6, '删除', NULL, 'sys:schedule:delete', 2, NULL, 0);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (11, 6, '暂停', NULL, 'sys:schedule:pause', 2, NULL, 0);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (12, 6, '恢复', NULL, 'sys:schedule:resume', 2, NULL, 0);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (13, 6, '立即执行', NULL, 'sys:schedule:run', 2, NULL, 0);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (14, 6, '日志列表', NULL, 'sys:schedule:log', 2, NULL, 0);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (15, 2, '查看', NULL, 'sys:user:list, sys:user:info', 2, NULL, 0);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (16, 2, '新增', NULL, 'sys:user:save, sys:role:select', 2, NULL, 0);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (17, 2, '修改', NULL, 'sys:user:update, sys:role:select', 2, NULL, 0);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (18, 2, '删除', NULL, 'sys:user:delete', 2, NULL, 0);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (19, 3, '查看', NULL, 'sys:role:list, sys:role:info', 2, NULL, 0);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (20, 3, '新增', NULL, 'sys:role:save, sys:menu:perms', 2, NULL, 0);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (21, 3, '修改', NULL, 'sys:role:update, sys:menu:perms', 2, NULL, 0);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (22, 3, '删除', NULL, 'sys:role:delete', 2, NULL, 0);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (23, 4, '查看', NULL, 'sys:menu:list, sys:menu:info', 2, NULL, 0);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (24, 4, '新增', NULL, 'sys:menu:save, sys:menu:select', 2, NULL, 0);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (25, 4, '修改', NULL, 'sys:menu:update, sys:menu:select', 2, NULL, 0);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (26, 4, '删除', NULL, 'sys:menu:delete', 2, NULL, 0);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (27, 1, '参数管理', 'sys/config.html', 'sys:config:list,sys:config:info,sys:config:save,sys:config:update,sys:config:delete', 1, 'fa fa-sun-o', 6);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (29, 1, '系统日志', 'sys/log.html', 'sys:log:list', 1, 'fa fa-file-text-o', 7);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (30, 1, '上传文件', 'sys/oss.html', 'sys:oss:all', 1, 'fa fa-file-image-o', 6);
INSERT INTO `server-security-master`.`sys_menu` (`menu_id`, `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`) VALUES (28, 1, '代码生成器', 'sys/generator.html', 'sys:generator:list,sys:generator:code', 1, 'fa fa-rocket', 8);

COMMIT;


-- -----------------------------------------------------
-- Data for table `server-security-master`.`sys_user`
-- -----------------------------------------------------
START TRANSACTION;
USE `server-security-master`;
INSERT INTO `server-security-master`.`sys_user` (`user_id`, `username`, `password`, `email`, `mobile`, `status`, `create_user_id`, `create_time`) VALUES (1, 'admin', '8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918', 'root@renren.io', '13612345678', 1, NULL, '2016-11-11 11:11:11');

COMMIT;


-- -----------------------------------------------------
-- Data for table `server-security-master`.`sys_config`
-- -----------------------------------------------------
START TRANSACTION;
USE `server-security-master`;
INSERT INTO `server-security-master`.`sys_config` (`id`, `key`, `value`, `status`, `remark`) VALUES (1, 'CLOUD_STORAGE_CONFIG_KEY', '{\\\"aliyunAccessKeyId\\\":\\\"\\\",\\\"aliyunAccessKeySecret\\\":\\\"\\\",\\\"aliyunBucketName\\\":\\\"\\\",\\\"aliyunDomain\\\":\\\"\\\",\\\"aliyunEndPoint\\\":\\\"\\\",\\\"aliyunPrefix\\\":\\\"\\\",\\\"qcloudBucketName\\\":\\\"\\\",\\\"qcloudDomain\\\":\\\"\\\",\\\"qcloudPrefix\\\":\\\"\\\",\\\"qcloudSecretId\\\":\\\"\\\",\\\"qcloudSecretKey\\\":\\\"\\\",\\\"qiniuAccessKey\\\":\\\"NrgMfABZxWLo5B-YYSjoE8-AZ1EISdi1Z3ubLOeZ\\\",\\\"qiniuBucketName\\\":\\\"ios-app\\\",\\\"qiniuDomain\\\":\\\"http://7xqbwh.dl1.z0.glb.clouddn.com\\\",\\\"qiniuPrefix\\\":\\\"upload\\\",\\\"qiniuSecretKey\\\":\\\"uIwJHevMRWU0VLxFvgy0tAcOdGqasdtVlJkdy6vV\\\",\\\"type\\\":1}', 0, '云存储配置信息');

COMMIT;


-- -----------------------------------------------------
-- Data for table `server-security-master`.`tb_user`
-- -----------------------------------------------------
START TRANSACTION;
USE `server-security-master`;
INSERT INTO `server-security-master`.`tb_user` (`user_id`, `username`, `mobile`, `password`, `create_time`) VALUES (1, 'mark', '13612345678', '8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918', '2017-03-23 22:37:41');

COMMIT;

-- -----------------------------------------------------
-- 创建用户并授权
-- -----------------------------------------------------
GRANT ALL ON `server-security-master`.* TO 'server_master'@'127.0.0.1' IDENTIFIED BY '123456';
